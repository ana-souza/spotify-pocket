{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nap_s\\\\Codenation\\\\react-17\\\\src\\\\routes\\\\PlaylistsRoute.jsx\";\nimport React from \"react\";\nimport { Playlists } from \"../containers\";\nimport { getContentNameById } from \"../modules/helpers\";\nimport { usePlaylistRoute } from \"../utils/hooks\";\n\nconst PlaylistsRoute = ({\n  path\n}) => {\n  const {\n    categoryId,\n    content\n  } = usePlaylistRoute();\n  return /*#__PURE__*/React.createElement(Playlists, {\n    categoryId: categoryId,\n    categoryName: getContentNameById(categoryId, content.categories),\n    data: content.playlists,\n    isLoading: content.status === \"running\" && content.playlists.length === 0,\n    path: path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default PlaylistsRoute;","map":{"version":3,"sources":["C:/Users/nap_s/Codenation/react-17/src/routes/PlaylistsRoute.jsx"],"names":["React","Playlists","getContentNameById","usePlaylistRoute","PlaylistsRoute","path","categoryId","content","categories","playlists","status","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,eAA1B;AAEA,SAASC,kBAAT,QAAmC,oBAAnC;AACA,SAASC,gBAAT,QAAiC,gBAAjC;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACnC,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA0BJ,gBAAgB,EAAhD;AAEA,sBACE,oBAAC,SAAD;AACE,IAAA,UAAU,EAAEG,UADd;AAEE,IAAA,YAAY,EAAEJ,kBAAkB,CAACI,UAAD,EAAaC,OAAO,CAACC,UAArB,CAFlC;AAGE,IAAA,IAAI,EAAED,OAAO,CAACE,SAHhB;AAIE,IAAA,SAAS,EAAEF,OAAO,CAACG,MAAR,KAAmB,SAAnB,IAAgCH,OAAO,CAACE,SAAR,CAAkBE,MAAlB,KAA6B,CAJ1E;AAKE,IAAA,IAAI,EAAEN,IALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASD,CAZD;;AAcA,eAAeD,cAAf","sourcesContent":["import React from \"react\";\n\nimport { Playlists } from \"../containers\";\n\nimport { getContentNameById } from \"../modules/helpers\";\nimport { usePlaylistRoute } from \"../utils/hooks\";\n\nconst PlaylistsRoute = ({ path }) => {\n  const { categoryId, content } = usePlaylistRoute();\n\n  return (\n    <Playlists\n      categoryId={categoryId}\n      categoryName={getContentNameById(categoryId, content.categories)}\n      data={content.playlists}\n      isLoading={content.status === \"running\" && content.playlists.length === 0}\n      path={path}\n    />\n  );\n};\n\nexport default PlaylistsRoute;\n"]},"metadata":{},"sourceType":"module"}