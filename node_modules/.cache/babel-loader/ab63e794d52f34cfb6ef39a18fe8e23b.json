{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { debounce } from \"lodash\";\nexport const useLogin = () => {\n  const [isMobile, setIsMobile] = useState(false);\n\n  const onResizeHandler = e => {\n    const {\n      innerWidth\n    } = e.target;\n\n    if (innerWidth <= 768) {\n      setIsMobile(true);\n      return;\n    }\n\n    setIsMobile(false);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", debounce(onResizeHandler, 250));\n    return () => {\n      window.removeEventListener(\"resize\", debounce(onResizeHandler));\n    };\n  }, []);\n  const screenWidth = window.innerWidth;\n  return {\n    isMobile,\n    screenWidth\n  };\n};","map":{"version":3,"sources":["C:/Users/nap_s/Codenation/react-17/src/utils/hooks/useLogin.js"],"names":["useState","useEffect","debounce","useLogin","isMobile","setIsMobile","onResizeHandler","e","innerWidth","target","window","addEventListener","removeEventListener","screenWidth"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,QAAzB;AAGA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMM,eAAe,GAAIC,CAAD,IAAO;AAC7B,UAAM;AAAEC,MAAAA;AAAF,QAAiBD,CAAC,CAACE,MAAzB;;AAEA,QAAID,UAAU,IAAI,GAAlB,EAAuB;AACrBH,MAAAA,WAAW,CAAC,IAAD,CAAX;AAEA;AACD;;AAEDA,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAVD;;AAYAJ,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCT,QAAQ,CAACI,eAAD,EAAkB,GAAlB,CAA1C;AAEA,WAAO,MAAM;AACXI,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCV,QAAQ,CAACI,eAAD,CAA7C;AACD,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;AAQA,QAAMO,WAAW,GAAGH,MAAM,CAACF,UAA3B;AAEA,SAAO;AACLJ,IAAAA,QADK;AAELS,IAAAA;AAFK,GAAP;AAID,CA7BM","sourcesContent":["import { useState, useEffect } from 'react';\nimport { debounce } from \"lodash\";\n\n\nexport const useLogin = () => {\n  const [isMobile, setIsMobile] = useState(false);\n\n  const onResizeHandler = (e) => {\n    const { innerWidth } = e.target;\n\n    if (innerWidth <= 768) {\n      setIsMobile(true);\n\n      return;\n    }\n\n    setIsMobile(false);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", debounce(onResizeHandler, 250));\n\n    return () => {\n      window.removeEventListener(\"resize\", debounce(onResizeHandler));\n    };\n  }, []);\n\n  const screenWidth = window.innerWidth;\n\n  return {\n    isMobile,\n    screenWidth\n  };\n}\n\n"]},"metadata":{},"sourceType":"module"}