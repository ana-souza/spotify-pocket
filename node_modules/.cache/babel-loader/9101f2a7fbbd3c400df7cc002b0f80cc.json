{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { authCallbackError, authCallbackSucess } from \"../../store/modules/auth/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getInfoFromUrlHash } from \"../../modules/url\";\nexport const useAuthorizeRoute = () => {\n  const [redirect, setRedirect] = useState(false);\n  const isLogged = useSelector(state => state.auth.isLogged);\n  const dispatch = useDispatch();\n  const urlHash = window.location.hash;\n  useEffect(() => {\n    const hashData = getInfoFromUrlHash(urlHash);\n\n    if (hashData.error) {\n      dispatch(authCallbackError(hashData.error));\n      return;\n    }\n\n    dispatch(authCallbackSucess(hashData));\n  }, [dispatch, urlHash]);\n  useEffect(() => {\n    if (isLogged) {\n      setTimeout(() => setRedirect(true), 3000);\n    }\n  }, [isLogged]);\n  return {\n    redirect\n  };\n};","map":{"version":3,"sources":["C:/Users/nap_s/Codenation/react-17/src/utils/hooks/useAuthorizeRoute.js"],"names":["useState","useEffect","authCallbackError","authCallbackSucess","useDispatch","useSelector","getInfoFromUrlHash","useAuthorizeRoute","redirect","setRedirect","isLogged","state","auth","dispatch","urlHash","window","location","hash","hashData","error","setTimeout"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SACEC,iBADF,EAEEC,kBAFF,QAGO,kCAHP;AAIA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,mBAAnC;AAGA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACrC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMU,QAAQ,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,QAAvB,CAA5B;AACA,QAAMG,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAMU,OAAO,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhC;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,QAAQ,GAAGZ,kBAAkB,CAACQ,OAAD,CAAnC;;AACA,QAAII,QAAQ,CAACC,KAAb,EAAoB;AAClBN,MAAAA,QAAQ,CAACX,iBAAiB,CAACgB,QAAQ,CAACC,KAAV,CAAlB,CAAR;AACA;AACD;;AACDN,IAAAA,QAAQ,CAACV,kBAAkB,CAACe,QAAD,CAAnB,CAAR;AACD,GAPQ,EAON,CAACL,QAAD,EAAWC,OAAX,CAPM,CAAT;AASAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,QAAJ,EAAc;AACZU,MAAAA,UAAU,CAAC,MAAMX,WAAW,CAAC,IAAD,CAAlB,EAA0B,IAA1B,CAAV;AACD;AACF,GAJQ,EAIN,CAACC,QAAD,CAJM,CAAT;AAQA,SAAO;AAAEF,IAAAA;AAAF,GAAP;AACD,CAzBM","sourcesContent":["import { useState, useEffect } from 'react';\nimport {\n  authCallbackError,\n  authCallbackSucess,\n} from \"../../store/modules/auth/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getInfoFromUrlHash } from \"../../modules/url\";\n\n\nexport const useAuthorizeRoute = () => {\n  const [redirect, setRedirect] = useState(false);\n  const isLogged = useSelector((state) => state.auth.isLogged);\n  const dispatch = useDispatch();\n\n  const urlHash = window.location.hash;\n\n  useEffect(() => {\n    const hashData = getInfoFromUrlHash(urlHash);\n    if (hashData.error) {\n      dispatch(authCallbackError(hashData.error));\n      return;\n    }\n    dispatch(authCallbackSucess(hashData));\n  }, [dispatch, urlHash]);\n\n  useEffect(() => {\n    if (isLogged) {\n      setTimeout(() => setRedirect(true), 3000);\n    }\n  }, [isLogged]);\n\n\n\n  return { redirect };\n}\n\n"]},"metadata":{},"sourceType":"module"}