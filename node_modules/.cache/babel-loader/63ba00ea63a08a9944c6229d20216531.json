{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTrackToPlayer, removeTrackToPlayer } from \"../../store/modules/content/actions\";\nexport const useTrack = track => {\n  const playingNowId = useSelector(state => state.content.playingNowId);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    if (isPlaying && playingNowId === track.id) {\n      setIsPlaying(false);\n      dispatch(removeTrackToPlayer());\n      return;\n    }\n\n    dispatch(addTrackToPlayer(track));\n    setIsPlaying(!isPlaying);\n  };\n\n  useEffect(() => {\n    if (playingNowId === track.id) {\n      return;\n    }\n\n    setIsPlaying(false);\n  }, [playingNowId, track.id]);\n  return {\n    isPlaying,\n    handleClick\n  };\n};","map":{"version":3,"sources":["C:/Users/nap_s/Codenation/react-17/src/utils/hooks/useTrack.js"],"names":["useState","useEffect","useDispatch","useSelector","addTrackToPlayer","removeTrackToPlayer","useTrack","track","playingNowId","state","content","isPlaying","setIsPlaying","dispatch","handleClick","id"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SACEC,gBADF,EAEEC,mBAFF,QAGO,qCAHP;AAKA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACjC,QAAMC,YAAY,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcF,YAA1B,CAAhC;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMa,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,QAAMY,WAAW,GAAG,MAAM;AACxB,QAAIH,SAAS,IAAIH,YAAY,KAAKD,KAAK,CAACQ,EAAxC,EAA4C;AAC1CH,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAC,MAAAA,QAAQ,CAACR,mBAAmB,EAApB,CAAR;AAEA;AACD;;AAEDQ,IAAAA,QAAQ,CAACT,gBAAgB,CAACG,KAAD,CAAjB,CAAR;AAEAK,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAXD;;AAaAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,YAAY,KAAKD,KAAK,CAACQ,EAA3B,EAA+B;AAC7B;AACD;;AAEDH,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GANQ,EAMN,CAACJ,YAAD,EAAeD,KAAK,CAACQ,EAArB,CANM,CAAT;AAQA,SAAO;AACLJ,IAAAA,SADK;AACMG,IAAAA;AADN,GAAP;AAGD,CA7BM","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  addTrackToPlayer,\n  removeTrackToPlayer,\n} from \"../../store/modules/content/actions\";\n\nexport const useTrack = (track) => {\n  const playingNowId = useSelector((state) => state.content.playingNowId);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    if (isPlaying && playingNowId === track.id) {\n      setIsPlaying(false);\n      dispatch(removeTrackToPlayer());\n\n      return;\n    }\n\n    dispatch(addTrackToPlayer(track));\n\n    setIsPlaying(!isPlaying);\n  };\n\n  useEffect(() => {\n    if (playingNowId === track.id) {\n      return;\n    }\n\n    setIsPlaying(false);\n  }, [playingNowId, track.id]);\n\n  return {\n    isPlaying, handleClick\n  };\n}\n\n"]},"metadata":{},"sourceType":"module"}