{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nap_s\\\\Codenation\\\\react-17\\\\src\\\\containers\\\\Player\\\\Player.jsx\";\nimport React from \"react\";\nimport { BsPauseFill, BsPlayFill } from \"react-icons/bs\";\nimport Ink from \"react-ink\";\nimport \"./Player.scss\";\nimport { usePlayer } from \"../../utils/hooks\";\n\nconst Player = () => {\n  var _getUsePlayer$current, _getUsePlayer$current2;\n\n  const {\n    getUsePlayer,\n    handleUsePlayer\n  } = usePlayer();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: getUsePlayer.playerRef,\n    className: `player ${getUsePlayer.currentTrack ? \"is-playing\" : \"\"}`,\n    \"data-testid\": \"player\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, getUsePlayer.currentTrack && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"player__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"player__progress-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"player__progress-bar__stroke\",\n    style: {\n      width: `${getUsePlayer.progressBarWidth}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"figure\", {\n    className: \"player__album-cover\",\n    style: {\n      backgroundImage: `url(${((_getUsePlayer$current = getUsePlayer.currentTrack.album) === null || _getUsePlayer$current === void 0 ? void 0 : (_getUsePlayer$current2 = _getUsePlayer$current.images[1]) === null || _getUsePlayer$current2 === void 0 ? void 0 : _getUsePlayer$current2.url) || \"\"})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"player__status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"player__artist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"player__music\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, getUsePlayer.currentTrack.name), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"player__artists\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, getUsePlayer.currentTrack.artists && getUsePlayer.currentTrack.artists.map(({\n    name\n  }) => name).join(\", \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: `player__status__current ${getUsePlayer.isPlaying ? \"is-playing\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }, \"Pausado\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  }, \"Reproduzindo\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"player__controls\",\n    onClick: handleUsePlayer.togglePlayPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `player__control ${!getUsePlayer.isPlaying ? \"is-paused\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, !getUsePlayer.isPlaying ? /*#__PURE__*/React.createElement(BsPlayFill, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 44\n    }\n  }) : /*#__PURE__*/React.createElement(BsPauseFill, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(Ink, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"audio\", {\n    ref: getUsePlayer.audioElementRef,\n    autoPlay: true,\n    onEnded: handleUsePlayer.handleOnEnded,\n    onTimeUpdate: handleUsePlayer.handleTimeUpdate,\n    preload: \"metadata\",\n    src: getUsePlayer.currentTrack.preview_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default Player;","map":{"version":3,"sources":["C:/Users/nap_s/Codenation/react-17/src/containers/Player/Player.jsx"],"names":["React","BsPauseFill","BsPlayFill","Ink","usePlayer","Player","getUsePlayer","handleUsePlayer","playerRef","currentTrack","width","progressBarWidth","backgroundImage","album","images","url","name","artists","map","join","isPlaying","togglePlayPause","audioElementRef","handleOnEnded","handleTimeUpdate","preview_url"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { BsPauseFill, BsPlayFill } from \"react-icons/bs\";\nimport Ink from \"react-ink\";\n\nimport \"./Player.scss\";\nimport { usePlayer } from \"../../utils/hooks\";\n\nconst Player = () => {\n  const { getUsePlayer, handleUsePlayer } = usePlayer();\n\n  return (\n    <div\n      ref={getUsePlayer.playerRef}\n      className={`player ${getUsePlayer.currentTrack ? \"is-playing\" : \"\"}`}\n      data-testid=\"player\"\n    >\n      {getUsePlayer.currentTrack && (\n        <div className=\"player__wrapper\">\n          <div className=\"player__progress-bar\">\n            <div\n              className=\"player__progress-bar__stroke\"\n              style={{ width: `${getUsePlayer.progressBarWidth}` }}\n            />\n          </div>\n\n          <div className=\"container\">\n            <figure\n              className=\"player__album-cover\"\n              style={{\n                backgroundImage: `url(${\n                  getUsePlayer.currentTrack.album?.images[1]?.url || \"\"\n                })`,\n              }}\n            />\n\n            <div className=\"player__status\">\n              <div className=\"player__artist\">\n                <span className=\"player__music\">\n                  {getUsePlayer.currentTrack.name}\n                </span>\n\n                <span className=\"player__artists\">\n                  {getUsePlayer.currentTrack.artists &&\n                    getUsePlayer.currentTrack.artists\n                      .map(({ name }) => name)\n                      .join(\", \")}\n                </span>\n\n                <div\n                  className={`player__status__current ${\n                    getUsePlayer.isPlaying ? \"is-playing\" : \"\"\n                  }`}\n                >\n                  <span>Pausado</span>\n                  <span>Reproduzindo</span>\n                </div>\n              </div>\n            </div>\n\n            <div\n              className=\"player__controls\"\n              onClick={handleUsePlayer.togglePlayPause}\n            >\n              <div\n                className={`player__control ${\n                  !getUsePlayer.isPlaying ? \"is-paused\" : \"\"\n                }`}\n              >\n                {!getUsePlayer.isPlaying ? <BsPlayFill /> : <BsPauseFill />}\n                <Ink />\n              </div>\n            </div>\n          </div>\n\n          <audio\n            ref={getUsePlayer.audioElementRef}\n            autoPlay\n            onEnded={handleUsePlayer.handleOnEnded}\n            onTimeUpdate={handleUsePlayer.handleTimeUpdate}\n            preload=\"metadata\"\n            src={getUsePlayer.currentTrack.preview_url}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Player;"]},"metadata":{},"sourceType":"module"}