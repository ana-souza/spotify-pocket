{"ast":null,"code":"import produce from 'immer';\nimport { AuthReduxType } from './types';\nconst INITIAL_STATE = {\n  accessToken: '',\n  errorMessage: '',\n  expirationTime: '',\n  expiresIn: '',\n  isLogged: false,\n  tokenType: ''\n};\nexport default function auth(state = INITIAL_STATE, action) {\n  return produce(state, draft => {\n    switch (action.type) {\n      case AuthReduxType.CALLBACK_SUCCESS:\n        {\n          draft.accessToken = action.payload.accessToken;\n          draft.expirationTime = new Date().getTime() + parseInt(action.payload.expiresIn);\n          draft.expiresIn = action.payload.expiresIn;\n          draft.isLogged = true;\n          draft.tokenType = action.payload.tokenType;\n          break;\n        }\n\n      case AuthReduxType.CALLBACK_ERROR:\n        {\n          draft.errorMessage = action.payload;\n          draft.isLogged = false;\n          break;\n        }\n\n      default:\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/nap_s/Codenation/react-17/src/store/modules/auth/reducer.js"],"names":["produce","AuthReduxType","INITIAL_STATE","accessToken","errorMessage","expirationTime","expiresIn","isLogged","tokenType","auth","state","action","draft","type","CALLBACK_SUCCESS","payload","Date","getTime","parseInt","CALLBACK_ERROR"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,SAASC,aAAT,QAA8B,SAA9B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,WAAW,EAAE,EADO;AAEpBC,EAAAA,YAAY,EAAE,EAFM;AAGpBC,EAAAA,cAAc,EAAE,EAHI;AAIpBC,EAAAA,SAAS,EAAE,EAJS;AAKpBC,EAAAA,QAAQ,EAAE,KALU;AAMpBC,EAAAA,SAAS,EAAE;AANS,CAAtB;AASA,eAAe,SAASC,IAAT,CAAcC,KAAK,GAAGR,aAAtB,EAAqCS,MAArC,EAA6C;AAC1D,SAAOX,OAAO,CAACU,KAAD,EAAQE,KAAK,IAAI;AAC7B,YAAQD,MAAM,CAACE,IAAf;AACE,WAAKZ,aAAa,CAACa,gBAAnB;AAAqC;AACnCF,UAAAA,KAAK,CAACT,WAAN,GAAoBQ,MAAM,CAACI,OAAP,CAAeZ,WAAnC;AACAS,UAAAA,KAAK,CAACP,cAAN,GAAuB,IAAIW,IAAJ,GAAWC,OAAX,KAAuBC,QAAQ,CAACP,MAAM,CAACI,OAAP,CAAeT,SAAhB,CAAtD;AACAM,UAAAA,KAAK,CAACN,SAAN,GAAkBK,MAAM,CAACI,OAAP,CAAeT,SAAjC;AACAM,UAAAA,KAAK,CAACL,QAAN,GAAiB,IAAjB;AACAK,UAAAA,KAAK,CAACJ,SAAN,GAAkBG,MAAM,CAACI,OAAP,CAAeP,SAAjC;AACA;AACD;;AACD,WAAKP,aAAa,CAACkB,cAAnB;AAAmC;AACjCP,UAAAA,KAAK,CAACR,YAAN,GAAqBO,MAAM,CAACI,OAA5B;AACAH,UAAAA,KAAK,CAACL,QAAN,GAAiB,KAAjB;AACA;AACD;;AACD;AAdF;AAgBD,GAjBa,CAAd;AAkBD","sourcesContent":["import produce from 'immer';\nimport { AuthReduxType } from './types';\n\nconst INITIAL_STATE = {\n  accessToken: '',\n  errorMessage: '',\n  expirationTime: '',\n  expiresIn: '',\n  isLogged: false,\n  tokenType: '',\n};\n\nexport default function auth(state = INITIAL_STATE, action) {\n  return produce(state, draft => {\n    switch (action.type) {\n      case AuthReduxType.CALLBACK_SUCCESS: {\n        draft.accessToken = action.payload.accessToken;\n        draft.expirationTime = new Date().getTime() + parseInt(action.payload.expiresIn);\n        draft.expiresIn = action.payload.expiresIn;\n        draft.isLogged = true;\n        draft.tokenType = action.payload.tokenType;\n        break;\n      }\n      case AuthReduxType.CALLBACK_ERROR: {\n        draft.errorMessage = action.payload;\n        draft.isLogged = false;\n        break;\n      }\n      default:\n    }\n  });\n}"]},"metadata":{},"sourceType":"module"}